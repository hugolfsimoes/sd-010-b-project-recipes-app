{"version":3,"sources":["images/mustachef.svg","images/shareIcon.svg","images/profileIcon.svg","images/searchIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/whiteHeartIcon.svg","images/blackHeartIcon.svg","images/notfound.gif","helpers/Input.jsx","helpers/Button.jsx","helpers/HelperFunctions.js","pages/Login.jsx","components/Card.jsx","contexts/RecipesContext.jsx","helpers/api.js","helpers/MealsAPI.js","components/Categories.jsx","components/MainCards.jsx","components/SearchBar.jsx","components/Header.jsx","components/Footer.jsx","pages/MainPage.jsx","pages/Perfil.jsx","components/Recommended.jsx","helpers/FavoriteButton.jsx","pages/Details.jsx","pages/InProgress.jsx","pages/ExploreIngredients.jsx","pages/ExploreArea.jsx","pages/Explore.jsx","pages/ExploreRecipes.jsx","components/DoneCard.jsx","pages/DoneRecipes.jsx","pages/NotFound.jsx","pages/FavoriteRecipes.jsx","App.js","serviceWorker.js","helpers/CocktailsAPI.js","contexts/RecipesProvider.jsx","index.js"],"names":["module","exports","Input","values","className","func","label","testid","type","value","htmlFor","checked","name","data-testid","id","onChange","target","Button","disabled","onClick","pathTreament","pathname","change","negativeOne","lastLetter","slice","newPathname","size","length","includes","alertMessage","fn","message","getItem","key","JSON","parse","localStorage","setItem","stringify","setInitialItem","Login","useState","email","setEmail","password","setPassword","disable","setDisable","validEmail","setValidEmail","validPassword","setValidPassword","history","useHistory","useEffect","src","logo","alt","test","push","Card","props","thumbnail","title","index","category","hidden","useLocation","console","log","dataTestId","dataTestIdTitle","hide","to","width","RecipesContext","createContext","fetchAPI","url","a","fetch","response","json","getAPI","filter","endpoint","results","error","MEALS_API","meals","drinks","getMealsRecipes","getMealsCategories","getMealsAreas","getMealsIngredients","getMealsByCategory","getMealsByArea","area","getMealById","getRecipesByIng","ingredient","getRandomRecipe","Categories","categoriesData","setCategoriesData","selectedCategory","setSelectedCategory","toggle","setToggle","useContext","setData","setIngredient","strFilter","strCategory","item","getCategories","filterCategory","map","MainCards","maxCards","data","typeId","recipe","selectedFilter","ingredients","firstLetter","SearchBar","searchInput","setSearchInput","radioInput","setRadioInput","filterApi","alert","result","role","Header","hasSearchBar","showSearch","setShowSearch","toLowerCase","profileIcon","previousState","searchIcon","Footer","drinkIcon","exploreIcon","mealIcon","MainPage","strTitle","isFetching","Perfil","clear","Recommended","recommendedData","setRecommendedData","cardLeft","setCardLeft","cardRight","setCardRight","recommendedType","getData","FavoriteButton","useParams","food","favorited","favoritedCheck","some","i","dataParam","idMeal","idDrink","strArea","alcoholicOrNot","strAlcoholic","strMeal","strDrink","image","strMealThumb","strDrinkThumb","remove","j","saveFavorite","blackHeartIcon","whiteHeartIcon","Details","detailsData","setDetailsData","shareCopy","setShareCopy","singleType","replace","first","toUpperCase","cocktails","typeKey","handleClickShare","window","location","href","copy","setTimeout","undefined","Object","keys","shareIcon","measure","ingredientsAndMeasures","videoId","strYoutube","video","redirectInProgress","toString","InProgress","ingredientsList","createIngredientList","localStorageIngredients","ingredientCheck","setIngredientCheck","recipeDone","itemList","capitalize","doneDate","Date","tags","strTags","createDoneRecipe","checkOnClick","inProgressRecipes","ing","lastIndexOf","redirectRecipesDone","ExploreIngredients","dataIngredients","setDataIngredients","setIsFetching","ingredientPathname","ingrediente","strIngredient","strIngredient1","ExploreArea","areas","setAreas","selectedArea","setSelectedArea","recipesByArea","setRecipesByArea","meal","getArea","fetchRecipesByArea","Explore","ExploreRecipes","getRandom","DoneCard","data-testId","tag","ReceitasFeitas","doneRecipesStorage","NotFound","notFound","ReceitasFavoritas","App","exact","path","component","DoneRecipes","FavoriteRecipes","Boolean","hostname","match","COCKTAILS_API","RecipesProvider","children","setType","mustUpdateType","strType","strPath","recipes","fetchRecipesByIngredient","recipesIngredients","context","Provider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7016de75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mustachef.ef389fd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.72a5895e.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.7a7d9c0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/notfound.4a06efb5.gif\";","import React from 'react';\n\nexport default function Input(values) {\n  const { className, func, label, testid, type, value, htmlFor, checked, name } = values;\n\n  return (\n    <label htmlFor={ htmlFor }>\n      {label}\n      <input\n        name={ name }\n        className={ className }\n        data-testid={ testid }\n        id={ testid }\n        onChange={ ({ target }) => func(target.value) }\n        type={ type }\n        value={ value }\n        checked={ checked }\n      />\n    </label>\n  );\n}\n","import React from 'react';\n\nexport default function Button(values) {\n  const { label, func, testid, className, disabled } = values;\n\n  return (\n    <button\n      className={ className }\n      data-testid={ testid }\n      disabled={ disabled }\n      id={ testid }\n      onClick={ () => func() }\n      type=\"button\"\n    >\n      {label}\n    </button>\n  );\n}\n","import { capitalize } from 'lodash-es';\n\nexport const pathTreament = (pathname, change = false) => {\n  const negativeOne = -1;\n  const lastLetter = pathname.slice(negativeOne);\n  let newPathname = pathname;\n  if (lastLetter === '/') {\n    const size = pathname.length - 1;\n    newPathname = (pathname.slice(0, size));\n  }\n  if (change) {\n    if (newPathname.includes('comidas')) {\n      return '/bebidas';\n    }\n    if (newPathname.includes('bebidas')) {\n      return '/comidas';\n    }\n  }\n  if (newPathname.includes('explorar')) {\n    return newPathname.includes('comida') ? '/comidas' : '/bebidas';\n    //  código alternativo(split): https://www.w3schools.com/jsref/jsref_split.asp\n  }\n  return newPathname;\n};\n\nexport const alertMessage = (fn, message) => {\n  fn(message);\n};\n\nexport const getItem = (key) => JSON.parse(localStorage.getItem(key));\nexport const setItem = (key, value) => localStorage.setItem(key, JSON.stringify(value));\nexport const setInitialItem = (key, value) => {\n  if (!getItem(key)) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\n\nexport const createDoneRecipe = (id, type, detailsData, pathname) => {\n  const minusOne = -1;\n  const singleType = capitalize(type.slice(0, minusOne));\n  const thumbnail = `str${singleType}Thumb`;\n  const title = `str${singleType}`;\n\n  const item = {\n    id,\n    type: (type === 'meals') ? 'comida' : 'bebida',\n    area: detailsData.strArea || '',\n    category: detailsData.strCategory || '',\n    alcoholicOrNot: detailsData.strAlcoholic || '',\n    name: detailsData[title],\n    image: detailsData[thumbnail],\n    doneDate: new Date(),\n    tags: detailsData.strTags || [],\n    url: pathname,\n  };\n  return item;\n};\n\nexport const createIngredientList = (detailsData) => {\n  if (detailsData) {\n    return (Object.keys(detailsData).filter(\n      (key) => (key.includes('strIngredient') && detailsData[key]),\n    ));\n  }\n  return [];\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport Input from '../helpers/Input';\nimport Button from '../helpers/Button';\nimport logo from '../images/mustachef.svg';\nimport { setItem } from '../helpers/HelperFunctions';\n\nexport default function Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [disable, setDisable] = useState(true);\n  const [validEmail, setValidEmail] = useState(false);\n  const [validPassword, setValidPassword] = useState(false);\n\n  const minPasswordLength = 6;\n  const history = useHistory();\n\n  const login = () => {\n    setItem('mealsToken', 1);\n    setItem('cocktailsToken', 1);\n    // const emailInfo = JSON.stringify({ email });\n    setItem('user', { email });\n\n    // setItem('inProgressRecipes', {\n    //   cocktails: {},\n    //   meals: {},\n    // });\n\n    // const inProgressRecipes = JSON.stringify({\n    //   cocktails: {},\n    //   meals: {\n    //     52844: ['alguma coisa'],\n    //   },\n    // });\n    // localStorage.setItem('inProgressRecipes', inProgressRecipes);\n    history.push('/comidas');\n  };\n\n  const validateFields = () => {\n    if (validEmail && validPassword) {\n      return setDisable(false);\n    }\n    return setDisable(true);\n  };\n\n  const validateEmail = (value) => {\n    setEmail(value);\n    const regex = /\\S+@\\S+\\.\\S+/;\n    setValidEmail(regex.test(value));\n  };\n\n  const validatePassword = (value) => {\n    setPassword(value);\n    if (value.length > minPasswordLength) {\n      setValidPassword(true);\n    } else { setValidPassword(false); }\n  };\n\n  useEffect(() => {\n    validateFields();\n  });\n\n  return (\n    <section className=\"login\">\n      <div className=\"transparent\">\n        <img src={ logo } alt=\"logo\" />\n        <form>\n          <h1 className=\"login-title\">Login</h1>\n          <Input\n            className=\"input-login\"\n            type=\"email\"\n            label=\"Email:\"\n            func={ validateEmail }\n            testid=\"email-input\"\n            value={ email }\n          />\n          <Input\n            className=\"input-login\"\n            type=\"password\"\n            label=\"Password:\"\n            func={ validatePassword }\n            testid=\"password-input\"\n            value={ password }\n          />\n          <Button\n            className=\"btn-login\"\n            disabled={ disable }\n            func={ login }\n            label=\"Login\"\n            testid=\"login-submit-btn\"\n          />\n        </form>\n      </div>\n    </section>\n  );\n}\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { pathTreament } from '../helpers/HelperFunctions';\n\nexport default function Card(props) {\n  const { id, thumbnail, title, index, category = '',\n    hidden = false, className, change = false } = props;\n  const { pathname } = useLocation();\n  console.log(pathname);\n  const dataTestId = (category) ? `${index}-recomendation-card` : `${index}-recipe-card`;\n  const dataTestIdTitle = (category) ? `${index}-recomendation-title`\n    : `${index}-card-name`;\n  const newPathname = pathTreament(pathname, change);\n  const hide = hidden ? 'hidden' : '';\n\n  return (\n    <Link\n      to={ `${newPathname}/${id}` }\n      data-testid={ dataTestId }\n      hidden={ hidden }\n      className={ `${className} ${hide}` }\n    >\n      <img\n        src={ thumbnail }\n        className=\"recipe-card-thumb\"\n        alt={ title }\n        data-testid={ `${index}-card-img` }\n        id={ index }\n        width=\"150\"\n      />\n      {category && (<span className=\"subtitle\">{category}</span>)}\n      <span data-testid={ dataTestIdTitle } className=\"recipe-card-title\">{title}</span>\n    </Link>\n  );\n}\n\nCard.propTypes = {\n  change: PropTypes.bool.isRequired,\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  hidden: PropTypes.bool.isRequired,\n  className: PropTypes.string.isRequired,\n};\n","import { createContext } from 'react';\n\nconst RecipesContext = createContext();\n\nexport default RecipesContext;\n","/*\n  Material consultado sobre o módulo light-weight 'node-fetch' que trás o window.fetch para Node.js: npm install --save @types/node-fetch\n  https://github.com/node-fetch/node-fetch#motivation\n */\n// import fetch from 'node-fetch';\n\n/*\n  Essa função recebe uma url, consulta na API e retorna o objeto JSON resultado do sucesso de uma Promise do processamento da stream response\n*/\nconst fetchAPI = async (url) => {\n  const response = await fetch(url); // busca o resultado de uma Promise de consulta usando a api e uma url como parâmetro\n  return response.json(); // retorna o objeto JSON resultado do sucesso de uma Promise do processamento da stream response\n};\n\nconst getAPI = async (url, type, key, filter = '') => {\n  const endpoint = `${url}${type}${filter}`;\n  // console.log(endpoint);\n  try {\n    const results = await fetchAPI(endpoint);\n    // console.log(results[key]);\n    return results[key];\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n};\n\nexport default getAPI;\n","import getAPI from './api';\n\nconst MEALS_API = {\n  meals: 'https://www.themealdb.com/api/json/v1/1/',\n  drinks: 'https://www.thecocktaildb.com/api/json/v1/1/',\n};\n// https://www.themealdb.com/api/json/v1/1/search.php?f={primeira-letra}\n\nexport const getMealsRecipes = (type = 'meals') => getAPI(\n  MEALS_API[type], 'search.php?s=', type,\n);\nexport const getMealsCategories = (type = 'meals') => getAPI(\n  MEALS_API[type], 'list.php?c=list', type,\n);\nexport const getMealsAreas = (type = 'meals') => getAPI(\n  MEALS_API[type], 'list.php?a=list', type,\n);\nexport const getMealsIngredients = (type = 'meals') => getAPI(\n  MEALS_API[type], 'list.php?i=list', type,\n);\nexport const getMealsIngredientsFilter = (filter, type = 'meals') => getAPI(\n  MEALS_API[type],\n  'filter.php?i=', type, filter,\n);\nexport const getMealsNameFilter = (filter, type = 'meals') => getAPI(MEALS_API[type],\n  'search.php?s=', type, filter);\nexport const getMealsFirstLetterFilter = (filter, type = 'meals') => getAPI(\n  MEALS_API[type],\n  'search.php?f=', type, filter,\n);\nexport const getMealsByCategory = (category, type = 'meals') => getAPI(MEALS_API[type],\n  'filter.php?c=', type, category);\n\nexport const getMealsByArea = (area, type = 'meals') => getAPI(MEALS_API[type],\n  'filter.php?a=', type, area);\n\nexport const getMealById = (id, type = 'meals') => getAPI(MEALS_API[type],\n  'lookup.php?i=',\n  type, id);\n\nexport const getMealRandom = (type = 'meals') => getAPI(\n  MEALS_API[type], 'random.php', type,\n);\n\nexport const getRecipesByIng = (ingredient, type = 'meals') => getAPI(MEALS_API[type],\n  'filter.php?i=', type, ingredient);\n\nexport const getRandomRecipe = (type = 'meals') => getAPI(MEALS_API[type],\n  'random.php', type);\n","import React, { useContext, useEffect, useState } from 'react';\nimport Button from '../helpers/Button';\nimport RecipesContext from '../contexts/RecipesContext';\nimport {\n  getMealsRecipes,\n  getMealsByCategory,\n  getMealsCategories,\n} from '../helpers/MealsAPI';\n\nexport default function Categories() {\n  const [categoriesData, setCategoriesData] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [toggle, setToggle] = useState(false);\n  const maxCards = 12;\n  const maxCategories = 5;\n\n  const {\n    setData,\n    type,\n    ingredient,\n    setIngredient,\n  } = useContext(RecipesContext);\n\n  const strFilter = (strCategory) => {\n    if (!toggle) {\n      setToggle(true);\n      setSelectedCategory(strCategory);\n    } else if (toggle && strCategory !== selectedCategory) {\n      setSelectedCategory(strCategory);\n    } else {\n      setToggle(false);\n      setSelectedCategory('All');\n    }\n  };\n\n  useEffect(() => {\n    const getCategories = async () => {\n      const results = await getMealsCategories(type);\n      setCategoriesData(results.filter((item, index) => index < maxCategories));\n    };\n    getCategories();\n  }, [type]);\n\n  useEffect(() => {\n    const filterCategory = async () => {\n      try {\n        if (ingredient !== '') return;\n        let results;\n        if (selectedCategory === 'All' && ingredient === '') {\n          results = await getMealsRecipes(type);\n        } else {\n          results = await getMealsByCategory(selectedCategory, type);\n        }\n        if (results && selectedCategory) {\n          setData(results.filter((item, index) => index < maxCards));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    filterCategory();\n  }, [selectedCategory]);\n\n  // useEffect(() => { console.log('select', selectedCategory); }, [selectedCategory]);\n\n  return (\n    <aside className=\"categories\">\n      <Button\n        key=\"All\"\n        label=\"All\"\n        func={ () => {\n          setIngredient('');\n          strFilter('All');\n        } }\n        testid=\"All-category-filter\"\n        className={ `categories-btn ${type}` }\n        disabled={ false }\n      />\n      {categoriesData.map(({ strCategory }) => (\n        <Button\n          key={ strCategory }\n          label={ strCategory }\n          func={ () => strFilter(strCategory) }\n          testid={ `${strCategory}-category-filter` }\n          className={ `categories-btn ${type}` }\n          disabled={ false }\n        />\n      ))}\n    </aside>\n  );\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport Card from './Card';\nimport Categories from './Categories';\nimport RecipesContext from '../contexts/RecipesContext';\n// import pathTreament from '../helpers/HelperFunctions';\n\nexport default function MainCards(props) {\n  const { maxCards } = useContext(RecipesContext);\n  const {\n    data,\n    thumbnail,\n    title,\n    typeId,\n  } = props;\n  // const history = useHistory();\n  const { pathname } = useLocation();\n\n  // if (data.length === 1) {\n  //   history.push(`${pathname}/${data[0][typeId]}`);\n  // }\n\n  return (\n    <main className=\"main\">\n      <Categories />\n      <section className=\"card-list\">\n        {data\n          && data.map((recipe, index) => (index < maxCards\n            ? (\n              <Card\n                key={ recipe[typeId] }\n                index={ index }\n                id={ recipe[typeId] }\n                thumbnail={ recipe[thumbnail] }\n                title={ recipe[title] }\n                className={ pathname\n                  .slice(1, pathname.length - 1) === 'comida'\n                  ? 'recipe-card meal' : 'recipe-card cocktail' }\n              />)\n            : null))}\n      </section>\n    </main>\n  );\n}\n\nMainCards.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  typeId: PropTypes.string.isRequired,\n};\n","import React, { useContext, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Input from '../helpers/Input';\nimport Button from '../helpers/Button';\nimport {\n  getMealsIngredientsFilter,\n  getMealsNameFilter,\n  getMealsFirstLetterFilter,\n} from '../helpers/MealsAPI';\nimport RecipesContext from '../contexts/RecipesContext';\nimport { alertMessage } from '../helpers/HelperFunctions';\n\nconst selectedFilter = {\n  ingredients: getMealsIngredientsFilter,\n  name: getMealsNameFilter,\n  firstLetter: getMealsFirstLetterFilter,\n};\n\nfunction SearchBar() {\n  const { pathname } = useLocation();\n\n  const history = useHistory();\n  const { setData, type } = useContext(RecipesContext);\n  const [searchInput, setSearchInput] = useState('');\n  const [radioInput, setRadioInput] = useState('');\n  const typeId = type === 'meals' ? 'idMeal' : 'idDrink';\n  const isDisabled = () => {\n    if (searchInput === '' || radioInput === '') {\n      return true;\n    }\n    return false;\n  };\n\n  // useEffect(() => {\n  const filterApi = async () => { //  tentar refatorar: jogar alerts dentro do getApi\n    if (radioInput === 'firstLetter' && searchInput.length > 1) {\n      alertMessage(alert, 'Sua busca deve conter somente 1 (um) caracter');\n    }\n    const result = await selectedFilter[radioInput](searchInput, type);\n    if (result === null) {\n      alertMessage(alert,\n        'Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    }\n    if (result.length === 1) {\n      history.push(`${pathname}/${result[0][typeId]}`);\n    }\n    if (result.length) { //  tentei refatorar, a aplicação funcionou normal mas cypress QUEBROU\n      setData(result);\n    }\n  };\n\n  // }, [filterHeader]);\n\n  /*\n    Material consultado sobre search role\n    https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/Search_role#prefer_html\n  */\n  return (\n    <form role=\"search\" htmlFor=\"seachBar\" className={ `${type} searchbar` }>\n      <Input\n        className=\"searchbar-input\"\n        func={ setSearchInput }\n        id=\"searchBar\"\n        type=\"text\"\n        testid=\"search-input\"\n      />\n      <div>\n        <Input\n          func={ setRadioInput }\n          name=\"search-radios\"\n          htmlFor=\"ingredients-radio\"\n          label=\"Ingrediente\"\n          testid=\"ingredient-search-radio\"\n          id=\"ingredients-radio\"\n          type=\"radio\"\n          value=\"ingredients\"\n        />\n        <Input // refatorar para menos parametros\n          func={ setRadioInput }\n          htmlFor=\"name-radio\"\n          label=\"Nome\"\n          name=\"search-radios\"\n          type=\"radio\"\n          id=\"name-radio\"\n          testid=\"name-search-radio\"\n          value=\"name\"\n        />\n        <Input\n          func={ setRadioInput }\n          htmlFor=\"firstLetter-radio\"\n          label=\"Primeira letra\"\n          name=\"search-radios\"\n          type=\"radio\"\n          id=\"firstLetter-radio\"\n          testid=\"first-letter-search-radio\"\n          value=\"firstLetter\"\n        />\n      </div>\n      <Button\n        className={ `btn-input-search ${type}` }\n        func={ () => filterApi() }\n        disabled={ isDisabled() }\n        testid=\"exec-search-btn\"\n        label=\"Buscar\"\n      />\n    </form>\n  );\n}\n\nexport default SearchBar;\n","import React, { useState } from 'react';\n// import { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBar from './SearchBar';\n\nfunction Header(props) {\n  const { title, hasSearchBar } = props;\n\n  const [showSearch, setShowSearch] = useState(false);\n\n  const showSearchChange = () => {\n    setShowSearch((previousState) => !previousState);\n  };\n\n  return (\n    <header className={ `header ${title.toLowerCase()}` }>\n      <div>\n        <Link to=\"/perfil\">\n          <img src={ profileIcon } alt=\"profile\" data-testid=\"profile-top-btn\" />\n        </Link>\n        <h1 data-testid=\"page-title\" className={ title.toLowerCase() }>{title}</h1>\n        {hasSearchBar && (\n          <button\n            className=\"btn-search\"\n            onClick={ showSearchChange }\n            type=\"button\"\n          >\n            <img src={ searchIcon } alt=\"search button\" data-testid=\"search-top-btn\" />\n          </button>\n        ) }\n      </div>\n      {showSearch && (\n        <SearchBar />\n      )}\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  hasSearchBar: PropTypes.bool.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\n\nexport default function Footer(props) {\n  const { className } = props;\n  return (\n    <footer\n      className={ `footer ${className}` }\n      data-testid=\"footer\"\n    >\n      <Link to=\"/bebidas\">\n        <img src={ drinkIcon } alt=\"Martini glass\" data-testid=\"drinks-bottom-btn\" />\n      </Link>\n      <Link to=\"/explorar\">\n        <img src={ exploreIcon } alt=\"Compass\" data-testid=\"explore-bottom-btn\" />\n      </Link>\n      <Link to=\"/comidas\">\n        <img src={ mealIcon } alt=\"knife and fork\" data-testid=\"food-bottom-btn\" />\n      </Link>\n    </footer>\n  );\n}\n\nFooter.propTypes = { className: PropTypes.string.isRequired };\n","import React, { useContext } from 'react';\nimport MainCards from '../components/MainCards';\nimport RecipesContext from '../contexts/RecipesContext';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport logo from '../images/mustachef.svg';\n\nexport default function MainPage() {\n  const { data, isFetching, type } = useContext(RecipesContext);\n  let title;\n  let thumbnail;\n  let strTitle;\n  let typeId;\n\n  if (type === 'meals') {\n    title = 'Comidas';\n    strTitle = 'strMeal';\n    thumbnail = 'strMealThumb';\n    typeId = 'idMeal';\n  } else {\n    title = 'Bebidas';\n    strTitle = 'strDrink';\n    thumbnail = 'strDrinkThumb';\n    typeId = 'idDrink';\n  }\n\n  return isFetching ? (\n    <div className=\"loading transparent\">\n      <img src={ logo } alt=\"Loading\" />\n    </div>\n  ) : (\n    <>\n      <Header title={ title } hasSearchBar />\n      <div className=\"transparent\">\n        <MainCards\n          data={ data }\n          thumbnail={ thumbnail }\n          title={ strTitle }\n          typeId={ typeId }\n        />\n      </div>\n      <Footer />\n    </>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Button from '../helpers/Button';\nimport { getItem, setInitialItem } from '../helpers/HelperFunctions';\n\nfunction Perfil() {\n  setInitialItem('user', { email: '' });\n  const { email } = getItem('user');\n  const history = useHistory();\n\n  return (\n    <>\n      <Header title=\"Perfil\" />\n      <span data-testid=\"profile-email\">{ email }</span>\n      <Button\n        label=\"Receitas Feitas\"\n        testid=\"profile-done-btn\"\n        func={ () => history.push('/receitas-feitas') }\n      />\n      <Button\n        label=\"Receitas Favoritas\"\n        testid=\"profile-favorite-btn\"\n        func={ () => history.push('/receitas-favoritas') }\n      />\n      <Button\n        label=\"Sair\"\n        testid=\"profile-logout-btn\"\n        func={ () => {\n          localStorage.clear();\n          history.push('/');\n        } }\n      />\n      <Footer />\n    </>\n  );\n}\n\nexport default Perfil;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { getMealsRecipes } from '../helpers/MealsAPI';\nimport RecipesContext from '../contexts/RecipesContext';\nimport Card from './Card';\nimport Button from '../helpers/Button';\n\nfunction Recommended() {\n  const { /* isFetching, */ type } = useContext(RecipesContext);\n  const [recommendedData, setRecommendedData] = useState([]);\n  const [cardLeft, setCardLeft] = useState(0);\n  const [cardRight, setCardRight] = useState(1);\n  const recommendedType = (type === 'meals') ? 'drinks' : 'meals';\n\n  let title;\n  let typeId;\n  let thumbnail;\n  let category;\n\n  if (recommendedType === 'meals') {\n    title = 'strMeal';\n    thumbnail = 'strMealThumb';\n    typeId = 'idMeal';\n    category = 'strCategory';\n  } else {\n    title = 'strDrink';\n    thumbnail = 'strDrinkThumb';\n    typeId = 'idDrink';\n    category = 'strAlcoholic';\n  }\n\n  const maxCards = 6;\n\n  useEffect(() => {\n    const getData = async () => {\n      const results = await getMealsRecipes(recommendedType);\n      setRecommendedData(results.filter((item, index) => index < maxCards));\n    };\n    getData();\n  }, [type, cardLeft, cardRight]);\n\n  const slideLeft = () => {\n    if (cardLeft === 0) {\n      setCardLeft(recommendedData.length - 1);\n      setCardRight(cardLeft);\n    } else {\n      setCardRight(cardLeft);\n      setCardLeft(cardLeft - 1);\n    }\n  };\n\n  const slideRight = () => {\n    if (cardRight < recommendedData.length - 1) {\n      setCardLeft(cardRight);\n      setCardRight(cardRight + 1);\n    } else {\n      setCardLeft(cardRight);\n      setCardRight(0);\n    }\n  };\n\n  return (\n    <section className=\"text-content\">\n      <h3>Recommended</h3>\n      <div className=\"carousel\">\n        <Button className=\"carousel-btn btn-left\" func={ slideLeft } label=\"<\" />\n        {// data-testid=\"${index}-recomendation-card\"\n          recommendedData.length && (\n            recommendedData.map((recipe, index) => (\n              <Card\n                change\n                className={ `recipe-card carousel-card ${recommendedType}` }\n                hidden={ index !== cardLeft && index !== cardRight }\n                key={ recipe[typeId] }\n                index={ index }\n                id={ recipe[typeId] }\n                thumbnail={ recipe[thumbnail] }\n                title={ recipe[title] }\n                category={ recipe[category] }\n              />\n            ))\n          )\n        }\n        <Button className=\"carousel-btn btn-right\" func={ slideRight } label=\">\" />\n      </div>\n    </section>\n  );\n}\n\nexport default Recommended;\n","import React, { useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport { setItem, getItem } from './HelperFunctions';\n\nexport default function FavoriteButton(values) {\n  const { data } = values;\n  const { pathname } = useLocation();\n  const { id } = useParams();\n  const food = pathname.includes('bebidas') ? 'bebida' : 'comida';\n  const favorited = getItem('favoriteRecipes');\n  const favoritedCheck = favorited && favorited.some((i) => i.id === id);\n  const [toggle, setToggle] = useState(favoritedCheck);\n  const saveFavorite = (dataParam) => {\n    // const favorited = getItem('favoriteRecipes');\n    // const favoritedCheck = favorited.some((i) => i.id === id);\n    if (favoritedCheck === false) {\n      setToggle(true);\n      setItem('favoriteRecipes', [...favorited, {\n        id: dataParam.idMeal || dataParam.idDrink,\n        type: food,\n        area: dataParam.strArea || '',\n        category: dataParam.strCategory,\n        alcoholicOrNot: dataParam.strAlcoholic || '',\n        name: dataParam.strMeal || dataParam.strDrink,\n        image: dataParam.strMealThumb || dataParam.strDrinkThumb,\n      }]);\n    } else {\n      setToggle(false);\n      const remove = favorited.filter((j) => j.id !== id);\n      setItem('favoriteRecipes', remove);\n    }\n  };\n  return (\n    <button\n      type=\"button\"\n      onClick={ () => saveFavorite(data) }\n    >\n      <img\n        src={ toggle ? blackHeartIcon : whiteHeartIcon }\n        alt=\"Favorite\"\n        data-testid=\"favorite-btn\"\n      />\n    </button>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\nimport YouTube from 'react-youtube';\nimport copy from 'clipboard-copy';\nimport { getMealById } from '../helpers/MealsAPI';\nimport RecipesContext from '../contexts/RecipesContext';\nimport shareIcon from '../images/shareIcon.svg';\n// import whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport Button from '../helpers/Button';\nimport Recommended from '../components/Recommended';\nimport { getItem, setItem, setInitialItem } from '../helpers/HelperFunctions';\nimport FavoriteButton from '../helpers/FavoriteButton';\n\nfunction Details() {\n  const { id } = useParams();\n  const history = useHistory();\n  // const [idDetails, setIdDetails] = useState(id);\n  const { /* isFetching, */ type } = useContext(RecipesContext);\n  const [detailsData, setDetailsData] = useState({});\n  const [shareCopy, setShareCopy] = useState(false);\n\n  const capitalize = (text) => text.replace(\n    /(?:^|\\s)\\S/g, (first) => first.toUpperCase(),\n  );\n\n  const minusOne = -1;\n  const singleType = capitalize(type.slice(0, minusOne));\n  const thumbnail = `str${singleType}Thumb`;\n  const title = `str${singleType}`;\n  const category = type === 'meals' ? 'strCategory' : 'strAlcoholic';\n  const instructions = 'strInstructions';\n  const { pathname } = useLocation();\n\n  setInitialItem('inProgressRecipes', {\n    cocktails: {},\n    meals: {},\n  });\n\n  setInitialItem('doneRecipes', []);\n  setInitialItem('favoriteRecipes', []);\n\n  useEffect(() => {\n    const getData = async () => {\n      const result = await getMealById(id, type);\n      setDetailsData(result[0]);\n    };\n    getData();\n  }, [type, id]);\n  const thirtyTwo = 32;\n\n  const typeKey = type === 'drinks' ? 'cocktails' : 'meals';\n  const redirectInProgress = () => {\n    const item = getItem('inProgressRecipes');\n    setItem('inProgressRecipes', {\n      ...item,\n      [typeKey]: {\n        ...item[typeKey],\n        [id]: [],\n      },\n    });\n    // const progressInfo = JSON.stringify({ [typeKey]: { [id]: [] } });\n    history.push(`${pathname}/in-progress`);\n  };\n\n  const recipeProgress = () => {\n    const item = getItem('inProgressRecipes');\n    return (item[typeKey][id.toString()]) ? 'Continuar Receitas' : 'Iniciar Receita';\n  };\n\n  const recipeIsDone = () => {\n    const itemList = getItem('doneRecipes');\n    return itemList.some((item) => item.id === id);\n  };\n\n  const video = () => {\n    if (type === 'drinks') {\n      return null;\n    }\n    const videoId = detailsData.strYoutube === undefined ? ''\n      : detailsData.strYoutube.slice(thirtyTwo);\n    return (\n      <section data-testid=\"video\">\n        <h3 className=\"title\">Video</h3>\n        <YouTube\n          className=\"video\"\n          videoId={ videoId }\n        />\n      </section>);\n  };\n\n  const ingredientsAndMeasures = (ingredient, measure) => (measure !== null\n    ? `${ingredient} - ${measure}` : ingredient);\n  // if (type === 'meals') {\n  //   title = 'Comidas';\n  //   strTitle = 'strMeal';\n  //   thumbnail = 'strMealThumb';\n  //   typeId = 'idMeal';\n  // } else {\n  //   title = 'Bebidas';\n  //   strTitle = 'strDrink';\n  //   thumbnail = 'strDrinkThumb';\n  //   typeId = 'idDrink';\n  // }\n\n  /*\n    Material consultado sobre dataset\n    https://developer.mozilla.org/pt-BR/docs/Learn/HTML/Howto/Use_data_attributes#acesso_no_javascript\n    { target: { dataset: { testid } } }\n    */\n  /*\n    Material consultado sobre URL absoluta da página\n    https://surajsharma.net/blog/current-url-in-react\n  */\n  const handleClickShare = async () => {\n    const url = window.location.href;\n\n    await copy(url);\n    setShareCopy(true);\n\n    const FIVE_SECONDS = 5000;\n    setTimeout(() => {\n      setShareCopy(false);\n    }, FIVE_SECONDS);\n  };\n\n  return (detailsData === undefined ? <div /> : Object.keys(detailsData).length !== 0\n  && (\n    <div className=\"transparent\">\n      <header>\n        <img\n          className=\"detail-thumb\"\n          src={ detailsData[thumbnail] }\n          alt={ detailsData[title] }\n          data-testid=\"recipe-photo\"\n        />\n      </header>\n      <main className=\"main\">\n        <h1 data-testid=\"recipe-title\" className=\"detail-title\">{detailsData[title]}</h1>\n        <h2\n          data-testid=\"recipe-category\"\n          className=\"detail-subtitle\"\n        >\n          {detailsData[category]}\n        </h2>\n        <div className=\"actions\">\n          { shareCopy && (<p>Link copiado!</p>) }\n          <button type=\"button\" onClick={ handleClickShare }>\n            <img src={ shareIcon } alt=\"Share\" data-testid=\"share-btn\" />\n          </button>\n          {/* <button type=\"button\">\n            <img src={ whiteHeartIcon } alt=\"Favorite\" data-testid=\"favorite-btn\" />\n          </button> */}\n          <FavoriteButton data={ detailsData } />\n        </div>\n        <section className=\"text-content\">\n          <h3>Ingredients</h3>\n          <ul>\n            {/* data-testid=\"${index}-ingredient-name-and-measure\" */\n\n              Object.keys(detailsData).filter(\n                (key) => (key.includes('strIngredient') && detailsData[key]),\n              ).map(\n                (ingredient, index) => (\n                  <li\n                    key={ index }\n                    data-testid={ `${index}-ingredient-name-and-measure` }\n                  >\n                    { ingredientsAndMeasures(detailsData[ingredient],\n                      detailsData[`strMeasure${index + 1}`]) }\n                  </li>),\n              )\n            }\n          </ul>\n        </section>\n        <section className=\"text-content\">\n          <h3>Instructions</h3>\n          <p data-testid=\"instructions\">{detailsData[instructions]}</p>\n        </section>\n        {// https://www.npmjs.com/package/react-youtube\n          video()\n        }\n        <Recommended />\n      </main>\n      <footer className=\"footer-details\">\n        {!recipeIsDone() && (\n          <Button\n            func={ () => redirectInProgress() }\n            className=\"start-recipe\"\n            label={ recipeProgress() }\n            testid=\"start-recipe-btn\"\n          />\n        )}\n      </footer>\n    </div>)\n  );\n}\n\nexport default Details;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\nimport YouTube from 'react-youtube';\nimport copy from 'clipboard-copy';\nimport { getMealById } from '../helpers/MealsAPI';\nimport RecipesContext from '../contexts/RecipesContext';\nimport shareIcon from '../images/shareIcon.svg';\nimport Button from '../helpers/Button';\nimport Recommended from '../components/Recommended';\nimport { getItem, setItem, createDoneRecipe, setInitialItem, createIngredientList }\n  from '../helpers/HelperFunctions';\nimport FavoriteButton from '../helpers/FavoriteButton';\n\nfunction InProgress() {\n  const { type } = useContext(RecipesContext);\n  const typeKey = type === 'drinks' ? 'cocktails' : 'meals';\n  const { id } = useParams();\n  setInitialItem('inProgressRecipes', {\n    cocktails: {},\n    meals: {},\n    [typeKey]: { [id]: [] },\n  });\n  setInitialItem('doneRecipes', []);\n  setInitialItem('favoriteRecipes', []);\n  const history = useHistory();\n  const [detailsData, setDetailsData] = useState({});\n  const [shareCopy, setShareCopy] = useState(false);\n  const ingredientsList = createIngredientList(detailsData);\n\n  const localStorageIngredients = getItem('inProgressRecipes')[typeKey][id];\n\n  const [ingredientCheck, setIngredientCheck] = useState(localStorageIngredients);\n\n  const capitalize = (text) => text.replace(\n    /(?:^|\\s)\\S/g, (first) => first.toUpperCase(),\n  );\n\n  const minusOne = -1;\n  const singleType = capitalize(type.slice(0, minusOne));\n  const thumbnail = `str${singleType}Thumb`;\n  const title = `str${singleType}`;\n  const category = type === 'meals' ? 'strCategory' : 'strAlcoholic';\n  const instructions = 'strInstructions';\n\n  useEffect(() => {\n    const getData = async () => {\n      const result = await getMealById(id, type);\n      setDetailsData(result[0]);\n    };\n    getData();\n  }, [type, id]);\n  const thirtyTwo = 32;\n  const { pathname } = useLocation();\n  const recipeDone = () => {\n    const itemList = getItem('doneRecipes');\n    itemList.push(createDoneRecipe(id, type, detailsData, pathname));\n\n    setItem('doneRecipes', itemList);\n  };\n\n  const redirectRecipesDone = () => {\n    recipeDone();\n    const inProgressRecipes = getItem('inProgressRecipes');\n    delete inProgressRecipes[typeKey][id];\n    setItem('inProgressRecipes', inProgressRecipes);\n    history.push('/receitas-feitas');\n  };\n\n  const video = () => {\n    if (type === 'drinks') {\n      return null;\n    }\n    const videoId = detailsData.strYoutube === undefined ? ''\n      : detailsData.strYoutube.slice(thirtyTwo);\n    return (\n      <section data-testid=\"video\">\n        <h3 className=\"title\">Video</h3>\n        <YouTube\n          className=\"video\"\n          videoId={ videoId }\n        />\n      </section>);\n  };\n\n  const ingredientsAndMeasures = (ingredient, measure) => (measure !== null\n    ? `${ingredient} - ${measure}` : ingredient);\n\n  const checkOnClick = ({ target }) => {\n    const inProgressRecipes = getItem('inProgressRecipes'); //  refatorar: não buscar do local estorage toda vez, salvar no local storage no final da função\n    if (target.checked) {\n      inProgressRecipes[typeKey][id].push(target.name);\n    } else {\n      inProgressRecipes[typeKey][id] = inProgressRecipes[typeKey][id]\n        .filter((ing) => ing !== target.name);\n    }\n    setIngredientCheck(inProgressRecipes[typeKey][id]);\n    setItem('inProgressRecipes', inProgressRecipes);\n  };\n\n  /*\n    Material consultado sobre dataset\n    https://developer.mozilla.org/pt-BR/docs/Learn/HTML/Howto/Use_data_attributes#acesso_no_javascript\n    { target: { dataset: { testid } } }\n    */\n  /*\n    Material consultado sobre URL absoluta da página\n    https://surajsharma.net/blog/current-url-in-react\n  */\n  const handleClickShare = async () => {\n    const { href } = window.location;\n    const url = href.slice(0, href.lastIndexOf('/'));\n    await copy(url);\n    setShareCopy(true);\n\n    const FIVE_SECONDS = 5000;\n    setTimeout(() => {\n      setShareCopy(false);\n    }, FIVE_SECONDS);\n  };\n\n  return (detailsData === undefined ? <div /> : Object.keys(detailsData).length !== 0\n  && (\n    <div className=\"transparent\">\n      <header>\n        <img\n          className=\"detail-thumb\"\n          src={ detailsData[thumbnail] }\n          alt={ detailsData[title] }\n          data-testid=\"recipe-photo\"\n        />\n      </header>\n      <main className=\"main\">\n        <h1 data-testid=\"recipe-title\" className=\"detail-title\">{detailsData[title]}</h1>\n        <h2\n          data-testid=\"recipe-category\"\n          className=\"detail-subtitle\"\n        >\n          {detailsData[category]}\n        </h2>\n        <div className=\"actions\">\n          { shareCopy && (<p>Link copiado!</p>) }\n          <button type=\"button\" onClick={ handleClickShare }>\n            <img src={ shareIcon } alt=\"Share\" data-testid=\"share-btn\" />\n          </button>\n          <FavoriteButton data={ detailsData } />\n        </div>\n        <section className=\"text-content\">\n          <h3>Ingredients</h3>\n          <ul>\n            { ingredientsList.map(\n              (ingredient, index) => (\n                <div data-testid={ `${index}-ingredient-step` } key={ index }>\n                  <input\n                    name={ detailsData[ingredient] }\n                    type=\"checkbox\"\n                    id={ detailsData[ingredient] }\n                    onClick={ checkOnClick }\n                    checked={ ingredientCheck.includes(detailsData[ingredient]) }\n                  />\n                  <label\n                    htmlFor={ detailsData[ingredient] }\n                  >\n                    { ingredientsAndMeasures(detailsData[ingredient],\n                      detailsData[`strMeasure${index + 1}`]) }\n                  </label>\n                </div>),\n            )}\n          </ul>\n        </section>\n        <section className=\"text-content\">\n          <h3>Instructions</h3>\n          <p data-testid=\"instructions\">{detailsData[instructions]}</p>\n        </section>\n        {// https://www.npmjs.com/package/react-youtube\n          video()\n        }\n        <Recommended />\n      </main>\n      <footer className=\"footer-details\">\n        <Button\n          func={ () => redirectRecipesDone() }\n          className=\"start-recipe\"\n          label=\"Finalizar receita\"\n          testid=\"finish-recipe-btn\"\n          disabled={ ingredientCheck.length !== ingredientsList.length }\n        />\n      </footer>\n    </div>)\n  );\n}\n\nexport default InProgress;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { getMealsIngredients } from '../helpers/MealsAPI';\nimport logo from '../images/mustachef.svg';\nimport RecipesContext from '../contexts/RecipesContext';\n\nexport default function ExploreIngredients() {\n  const { type, setIngredient, ingredient } = useContext(RecipesContext);\n  const [dataIngredients, setDataIngredients] = useState();\n  const [isFetching, setIsFetching] = useState(true);\n  const maxCards = 12;\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const ingredientPathname = pathname.includes('comidas') ? '/comidas' : '/bebidas';\n\n  // const fetchRecipesByIngredient = async (ingredient, paramType) => {\n  //   const recipes = await getRecipesByIng(ingredient, paramType);\n  //   setData(recipes);\n  // };\n\n  useEffect(() => {\n    const ingredients = async () => {\n      setIsFetching(true);\n      // console.log(type);\n      const result = await getMealsIngredients(type);\n      setDataIngredients(result.filter((item, index) => index < maxCards));\n      setIsFetching(false);\n    };\n    ingredients();\n  }, []);\n\n  // const title = {\n  //   meals: strIngredient,\n  //   drinks: strIngredient1,\n  // };\n  useEffect(() => {\n    if (ingredient !== '') {\n      history.push(ingredientPathname);\n    }\n  }, [ingredient]);\n\n  return isFetching ? (\n    <div className=\"loading transparent\">\n      <img src={ logo } alt=\"Loading\" />\n    </div>\n  ) : (\n    <>\n      <Header title=\"Explorar Ingredientes\" />\n      <div className=\"transparent\">\n        { dataIngredients.map((ingrediente, index) => (\n          <button\n            key={ index }\n            type=\"button\"\n            data-testid={ `${index}-ingredient-card` }\n            onClick={ () => {\n              setIngredient(ingrediente.strIngredient || ingrediente.strIngredient1);\n              // history.push(ingredientPathname);\n            } }\n          >\n            <img\n              data-testid={ `${index}-card-img` }\n              width=\"100\"\n              alt={ ingrediente.strIngredient || ingrediente.strIngredient1 }\n              src={\n                type === 'meals'\n                  ? `https://www.themealdb.com/images/ingredients/${ingrediente.strIngredient}-Small.png`\n                  : `https://www.thecocktaildb.com/images/ingredients/${ingrediente.strIngredient1}-Small.png`\n              }\n            />\n            <span\n              data-testid={ `${index}-card-name` }\n            >\n              { ingrediente.strIngredient || ingrediente.strIngredient1 }\n            </span>\n          </button>\n        )) }\n      </div>\n      <Footer />\n    </>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Card from '../components/Card';\nimport RecipesContext from '../contexts/RecipesContext';\nimport { getMealsAreas, getMealsByArea, getMealsRecipes } from '../helpers/MealsAPI';\n\nexport default function ExploreArea() {\n  const [isFetching, setIsFetching] = useState(true);\n  const [areas, setAreas] = useState([]);\n  const [selectedArea, setSelectedArea] = useState('All');\n  const [recipesByArea, setRecipesByArea] = useState([]);\n  const { type, maxCards } = useContext(RecipesContext);\n\n  useEffect(() => {\n    const getArea = async () => {\n      setIsFetching(true);\n      const results = await getMealsAreas(type);\n      setAreas(results.map((meal) => meal.strArea));\n      setIsFetching(false);\n    };\n    getArea();\n  }, []);\n\n  useEffect(() => {\n    const fetchRecipesByArea = async () => {\n      setIsFetching(true);\n      const results = selectedArea === 'All'\n        ? await getMealsRecipes(type) : await getMealsByArea(selectedArea, type);\n      setRecipesByArea(results.filter((item, index) => index < maxCards));\n      setIsFetching(false);\n    };\n    fetchRecipesByArea();\n  }, [selectedArea]);\n\n  return isFetching ? <p>Laoding</p> : (\n    <>\n      <Header title=\"Explorar Origem\" hasSearchBar />\n      <section>\n        <form>\n          <select\n            data-testid=\"explore-by-area-dropdown\"\n            onChange={ ({ target }) => setSelectedArea(target.value) }\n            value={ selectedArea }\n          >\n            <option\n              data-testid=\"All-option\"\n              key=\"All\"\n              value=\"All\"\n            >\n              All\n            </option>\n            {areas && areas.map((area) => (\n              <option\n                data-testid={ `${area}-option` }\n                key={ area }\n                value={ area }\n              >\n                {area}\n              </option>\n            ))}\n            )\n          </select>\n        </form>\n        {\n          recipesByArea && recipesByArea.map((recipe, index) => (\n            <Card\n              className={ `recipe-card ${type}` }\n              index={ index }\n              id={ recipe.idMeal }\n              key={ recipe.strMeal }\n              thumbnail={ recipe.strMealThumb }\n              title={ recipe.strMeal }\n            />\n          ))\n        }\n      </section>\n      <Footer />\n    </>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Button from '../helpers/Button';\nimport RecipesContext from '../contexts/RecipesContext';\n\nfunction Explore() {\n  const history = useHistory();\n  const { setIngredient } = useContext(RecipesContext);\n  useEffect(() => { setIngredient(''); }, []);\n\n  return (\n    <div>\n      <Header title=\"Explorar\" />\n      <Button\n        label=\"Explorar Comidas\"\n        testid=\"explore-food\"\n        func={ () => history.push('/explorar/comidas') }\n      />\n      <Button\n        label=\"Explorar Bebidas\"\n        testid=\"explore-drinks\"\n        func={ () => history.push('/explorar/bebidas') }\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default Explore;\n","import React, { useContext } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Button from '../helpers/Button';\nimport { getRandomRecipe } from '../helpers/MealsAPI';\nimport RecipesContext from '../contexts/RecipesContext';\n\nfunction ExploreRecipes() {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const food = pathname.includes('bebidas') ? 'Bebidas' : 'Comidas';\n  const { type } = useContext(RecipesContext);\n\n  const getRandom = async () => {\n    const typeId = food === 'Comidas' ? 'idMeal' : 'idDrink';\n    const results = await getRandomRecipe(type);\n    const recipe = results[0];\n    history.push(`/${food.toLowerCase()}/${recipe[typeId]}`);\n  };\n\n  return (\n    <div>\n      <Header title={ `Explorar ${food}` } />\n      <Button\n        label=\"Por Ingredientes\"\n        testid=\"explore-by-ingredient\"\n        func={ () => history.push(`/explorar/${food.toLowerCase()}/ingredientes`) }\n      />\n      {food === 'Comidas'\n      && <Button\n        label=\"Por Local de Origem\"\n        testid=\"explore-by-area\"\n        func={ () => history.push(`/explorar/${food.toLowerCase()}/area`) }\n      />}\n      <Button\n        label=\"Me Surpreenda!\"\n        testid=\"explore-surprise\"\n        func={ getRandom }\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreRecipes;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport { pathTreament } from '../helpers/HelperFunctions';\nimport shareIcon from '../images/shareIcon.svg';\n\nexport default function DoneCard(props) {\n  const { id, thumbnail, title, index, category = '',\n    hidden = false, className, doneDate, url, tags = [] } = props;\n  // const { pathname } = useLocation();\n  const dataTestId = (category) ? `${index}-recomendation-card` : `${index}-recipe-card`;\n  // const dataTestIdTitle = (category) ? `${index}-recomendation-title`\n  //   : `${index}-card-name`;\n  const newPathname = url && pathTreament(url);\n  const hide = hidden ? 'hidden' : '';\n  const [shareCopy, setShareCopy] = useState(false);\n\n  const handleClickShare = async () => {\n    await copy(newPathname);\n    setShareCopy(true);\n\n    const FIVE_SECONDS = 5000;\n    setTimeout(() => {\n      setShareCopy(false);\n    }, FIVE_SECONDS);\n  };\n\n  return (\n    <Link\n      to={ `${newPathname}/${id}` }\n      data-testid={ dataTestId }\n      hidden={ hidden }\n      className={ `${className} ${hide}` }\n    >\n      <img\n        src={ thumbnail }\n        className=\"recipe-card-thumb\"\n        alt={ title }\n        data-testid={ `${index}-horizontal-image` }\n        id={ index }\n        width=\"150\"\n      />\n      <div className=\"actions\">\n        { shareCopy && (<p>Link copiado!</p>) }\n        <button type=\"button\" onClick={ handleClickShare }>\n          <img\n            src={ shareIcon }\n            alt=\"Share\"\n            data-testid={ `${index}-horizontal-share-btn` }\n          />\n        </button>\n        {/* <button type=\"button\">\n            <img src={ whiteHeartIcon } alt=\"Favorite\" data-testid=\"favorite-btn\" />\n          </button> */}\n      </div>\n      <span\n        data-testId={ `${index}-horizontal-top-text` }\n        className=\"subtitle\"\n      >\n        {category}\n      </span>\n      <span\n        data-testid={ `${index}-horizontal-name` }\n        className=\"recipe-card-title\"\n      >\n        {title}\n      </span>\n      <span data-testid={ `${index}-horizontal-done-date` }>\n        Feita em\n        {' '}\n        {doneDate}\n      </span>\n      <span>\n        {typeof (tags) === 'string'\n          ? (\n            <tag\n              data-testid={ `${0}-${tags}-horizontal-tag` }\n              key={ `${tags}-${id}` }\n            >\n              {tags}\n            </tag>)\n          : tags.map((tag, i) => (\n            <tag\n              data-testid={ `${i}-${tag}-horizontal-tag` }\n              key={ `${tag}-${id}` }\n            >\n              {tag}\n            </tag>))}\n      </span>\n    </Link>\n  );\n}\n\nDoneCard.propTypes = {\n  tags: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  doneDate: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  hidden: PropTypes.bool.isRequired,\n  className: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { getItem } from '../helpers/HelperFunctions';\nimport Button from '../helpers/Button';\nimport Header from '../components/Header';\nimport DoneCard from '../components/DoneCard';\n\nfunction ReceitasFeitas() {\n  const doneRecipesStorage = getItem('doneRecipes');\n  return (\n    <>\n      <Header title=\"Receitas Feitas\" />\n      <section>\n        <Button testid=\"filter-by-all-btn\" label=\"All\" />\n        <Button testid=\"filter-by-food-btn\" label=\"Food\" />\n        <Button testid=\"filter-by-drink-btn\" label=\"Drinks\" />\n      </section>\n      <section>\n        {doneRecipesStorage && doneRecipesStorage.map((recipe, index) => (\n          <DoneCard\n            index={ index }\n            key={ recipe.id }\n            title={ recipe.name }\n            area={ recipe.area }\n            category={ recipe.alcoholicOrNot !== '' ? recipe.alcoholicOrNot\n              : recipe.category }\n            thumbnail={ recipe.image }\n            doneDate={ recipe.doneDate }\n            url={ recipe.url }\n            id={ recipe.id }\n            tags={ recipe.tags }\n          />\n        ))}\n      </section>\n    </>\n  );\n}\n\nexport default ReceitasFeitas;\n","import React from 'react';\nimport notFound from '../images/notfound.gif';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nexport default function NotFound() {\n  return (\n    <>\n      <Header title=\"Explorar Origem\" />\n      <section className=\"transparent center\">\n        <h1>Not Found</h1>\n        <img src={ notFound } alt=\"Not Found\" />\n      </section>\n      <Footer className=\"explorar\" />\n    </>\n  );\n}\n","import React from 'react';\nimport { getItem } from '../helpers/HelperFunctions';\nimport Button from '../helpers/Button';\nimport Header from '../components/Header';\nimport DoneCard from '../components/DoneCard';\n\nfunction ReceitasFavoritas() {\n  const doneRecipesStorage = getItem('doneRecipes');\n  return (\n    <>\n      <Header title=\"Receitas Favoritas\" />\n      <section>\n        <Button testid=\"filter-by-all-btn\" label=\"All\" />\n        <Button testid=\"filter-by-food-btn\" label=\"Food\" />\n        <Button testid=\"filter-by-drink-btn\" label=\"Drinks\" />\n      </section>\n      <section>\n        {doneRecipesStorage && doneRecipesStorage.map((recipe, index) => (\n          <DoneCard\n            index={ index }\n            key={ recipe.id }\n            title={ recipe.name }\n            area={ recipe.area }\n            category={ recipe.alcoholicOrNot !== '' ? recipe.alcoholicOrNot\n              : recipe.category }\n            thumbnail={ recipe.image }\n            doneDate={ recipe.doneDate }\n            url={ recipe.url }\n            id={ recipe.id }\n            tags={ recipe.tags }\n          />\n        ))}\n      </section>\n    </>\n  );\n}\n\nexport default ReceitasFavoritas;\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport MainPage from './pages/MainPage';\nimport Perfil from './pages/Perfil';\nimport Details from './pages/Details';\nimport InProgress from './pages/InProgress';\nimport ExploreIngredients from './pages/ExploreIngredients';\nimport ExploreArea from './pages/ExploreArea';\nimport Explore from './pages/Explore';\nimport ExploreRecipes from './pages/ExploreRecipes';\nimport DoneRecipes from './pages/DoneRecipes';\nimport NotFound from './pages/NotFound';\nimport FavoriteRecipes from './pages/FavoriteRecipes';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route path=\"/explorar/bebidas/ingredientes\" component={ ExploreIngredients } />\n      <Route path=\"/explorar/comidas/ingredientes\" component={ ExploreIngredients } />\n      <Route path=\"/explorar/comidas/area\" component={ ExploreArea } />\n      <Route path=\"/explorar/comidas\" component={ ExploreRecipes } />\n      <Route path=\"/explorar/bebidas/area\" component={ NotFound } />\n      <Route path=\"/explorar/bebidas\" component={ ExploreRecipes } />\n      <Route path=\"/explorar\" component={ Explore } />\n      <Route exact path=\"/perfil\" component={ Perfil } />\n      <Route path=\"/receitas-feitas\" component={ DoneRecipes } />\n      <Route path=\"/receitas-favoritas\" component={ FavoriteRecipes } />\n      <Route path=\"/bebidas/:id/in-progress\" component={ InProgress } />\n      <Route path=\"/comidas/:id/in-progress\" component={ InProgress } />\n      <Route path=\"/bebidas/:id\" component={ Details } />\n      <Route path=\"/comidas/:id\" component={ Details } />\n      <Route exact path=\"/comidas\" component={ MainPage } />\n      <Route exact path=\"/bebidas\" component={ MainPage } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import getAPI from './api';\n\nconst COCKTAILS_API = 'https://www.thecocktaildb.com/api/json/v1/1/';\n\n// https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=11007\n// https://www.themealdb.com/api/json/v1/1/lookup.php?i=52772\n\nexport const getCocktailsRecipes = () => (\n  getAPI(COCKTAILS_API, 'search.php?s=', 'drinks')\n);\n\nexport const getCocktailsCategories = () => (\n  getAPI(COCKTAILS_API, 'list.php?c=list', 'drinks')\n);\nexport const getCocktailsAreas = () => (\n  getAPI(COCKTAILS_API, 'list.php?a=list', 'drinks')\n);\nexport const getCocktailsIngredients = () => (\n  getAPI(COCKTAILS_API, 'list.php?i=list', 'drinks')\n);\nexport const getCocktailsIngredientsFilter = (filter) => (\n  getAPI(COCKTAILS_API, 'filter.php?i=', 'drinks', filter)\n);\nexport const getCocktailsByCategory = (category) => (\n  getAPI(COCKTAILS_API, 'filter.php?c=', 'drinks', category)\n);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport RecipesContext from './RecipesContext';\nimport { getMealsRecipes, getRecipesByIng } from '../helpers/MealsAPI';\nimport {\n  getCocktailsRecipes,\n} from '../helpers/CocktailsAPI';\n\nfunction RecipesProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [type, setType] = useState('meals');\n  const [isFetching, setIsFetching] = useState(true);\n  const [ingredient, setIngredient] = useState('');\n\n  const maxCards = 12;\n\n  const mustUpdateType = (strType, strPath, pathname) => (\n    type !== strType && pathname.includes(strPath)\n  );\n\n  const { pathname } = useLocation();\n  if (mustUpdateType('meals', 'comidas', pathname)) {\n    setType('meals');\n  }\n  if (mustUpdateType('drinks', 'bebidas', pathname)) {\n    setType('drinks');\n  }\n\n  useEffect(() => {\n    setIsFetching(true);\n    const recipes = async () => {\n      const results = (type === 'meals')\n        ? await getMealsRecipes() : await getCocktailsRecipes();\n      setData(results.filter((item, index) => index < maxCards)); //  refatorar para stopar ao atingir o maxCards\n      setIsFetching(false);\n    };\n\n    const fetchRecipesByIngredient = async () => {\n      setIsFetching(true);\n      const recipesIngredients = await getRecipesByIng(ingredient, type);\n      setData(recipesIngredients);\n      setIsFetching(false);\n    };\n\n    if (ingredient === '') {\n      recipes();\n    } else {\n      fetchRecipesByIngredient();\n    }\n  }, [ingredient, type]);\n\n  const context = {\n    isFetching,\n    data,\n    type,\n    setType,\n    setIsFetching,\n    setData,\n    maxCards,\n    ingredient,\n    setIngredient,\n  };\n\n  return (\n    <RecipesContext.Provider value={ context }>\n      {children}\n    </RecipesContext.Provider>\n  );\n}\n\nRecipesProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default RecipesProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport RecipesProvider from './contexts/RecipesProvider';\n\nReactDOM.render(\n  <BrowserRouter>\n    <RecipesProvider>\n      <App />\n    </RecipesProvider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}